bool result:true
void fail(string msg):
    "tc_update01: FAIL: $msg"
    result = false

uint32 aTriggered, bTriggered, bChildsTriggered, cTriggered
uint32 dTriggered, dChildsTriggered, dSelfChildsTriggered, eTriggered

class Counter::
    member count, triggered : uint32
    
    // Notify others    
    void trigger():    
        update this: 
            triggered++ 
        
    // Observe self
    on update this:
        count++
    
void test(Counter c, uint32 count, uint32 triggered):
    if c.count != count:         fail("${c.fullname()}.count != $count")
    if c.triggered != triggered: fail("${c.fullname()}.triggered != $triggered")
    
Counter a:;
Counter b:::
    Counter c:;
    Counter d:::
        Counter e:;

// Let object notify others
a.trigger()
b.trigger()
b::c.trigger()
b::d.trigger()
b::d::e.trigger()

// Notify both object and others
update a
update b
update b::c
update b::d
update b::d::e

on update a: aTriggered++
on update b: bTriggered++
on update scope b: bChildsTriggered++
on update b::c: cTriggered++
on update b::d: dTriggered++
on update scope b::d: dChildsTriggered++
on update self|scope b::d: dSelfChildsTriggered++
on update b::d::e: eTriggered++

// Validate scenario
test(a, 1, 1)
test(b, 1, 1)
test(b::c, 1, 1)
test(b::d, 1, 1)
test(b::d::e, 1, 1)

if aTriggered != 2: fail("aTriggered != 2")
if bTriggered != 2: fail("bTriggered != 2")
if bChildsTriggered != 6: fail("bChildsTriggered != 6 ($bChildsTriggered)")
if cTriggered != 2: fail("cTriggered != 2")
if dTriggered != 2: fail("dTriggered != 2")
if dChildsTriggered != 2: fail("dChildsTriggered != 2")
if dSelfChildsTriggered != 4: fail("dSelfChildsTriggered != 4")
if eTriggered != 2: fail("eTriggered != 2")

if result: "tc_update01: OK"
