#package /corto/parser

// ============
// Forward Declarations
// ============

class ProgramNode
class StatementNode
class ExpressionNode

list StatementList: StatementNode
list ExpressionList: ExpressionNode


// ============
// Parser
// ============


class BaseParser::

    success: bool, readonly
    programReturn: ProgramNode, readonly

    int16 parse(string text)
    int16 parseFile(string filename)
    void displayRecognitionError(word recognizer, word tokenNames) virtual


class SimpleParser: BaseParser::
    errors: list{string}, hidden

    void displayRecognitionError(word recognizer, word tokenNames)


// ============
// Node
// ============


class Node::
    line: uint32
    column: uint32


class ProgramNode: Node::
    statements: StatementList


class StatementNode: Node


class ExpressionStatementNode: StatementNode::
    expression: ExpressionNode


class ExpressionNode: Node


class BinaryExpressionNode: ExpressionNode::
    left: ExpressionNode
    operator: string
    right: ExpressionNode


class CommaExpressionNode: ExpressionNode::
    expressions: ExpressionList


class ConditionalExpressionNode: ExpressionNode::
    condition: ExpressionNode
    trueValue: ExpressionNode
    falseValue: ExpressionNode


// ============
// Visitor
// ============

class BaseVisitor::
    parser: baseParser

    int16 construct()
    void destruct()
    
    object visit() virtual

    object visitProgramNode(ProgramNode node) virtual
    
    object visitStatementNode(StatementNode node) virtual
    object visitExpressionStatementNode(ExpressionStatementNode node) virtual
    
    object visitExpressionNode(ExpressionNode node) virtual
    object visitBinaryExpressionNode(BinaryExpressionNode node) virtual
    object visitCommaExpressionNode(CommaExpressionNode node) virtual
    object visitConditionalExpressionNode(ConditionalExpressionNode node) virtual


class PrintVisitor: BaseVisitor::
    buffer: word, private
    level: uint32, private

    int16 construct()
    void destruct()

    object visitProgramNode(ProgramNode node) virtual
    
    object visitStatementNode(StatementNode node) virtual

    object visitExpressionNode(ExpressionNode node) virtual
    object visitBinaryExpressionNode(BinaryExpressionNode node) virtual
    object visitCommaExpressionNode(CommaExpressionNode node) virtual
    object visitConditionalExpressionNode(ConditionalExpressionNode node) virtual

    string getText()
