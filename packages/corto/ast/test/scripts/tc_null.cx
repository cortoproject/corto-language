bool result : true
void fail(string msg):
    "tc_null: FAIL: $msg"
    result = false

struct Thing::
    member x : object
    
Thing o : null
string s : null
var object lo = null

if null != null: fail("comparing null with null failed")
if (null != null).typeof() != bool: fail("type of null comparison is not a bool")
if o.x != null:  fail("comparing member with null failed")
if o.x != lo:    fail("comparing null object with null var failed")
if s != null:    fail("string with null failed")

o.x = null
if o.x != null:  fail("null assignment to object failed")

lo = null
if lo != null:   fail("null assignment to var failed")

s = null
if s != null:    fail("null assignment to string failed")

// Test passing null as argument
class Point:: x, y: uint32
Point foo(Point a) = a
string bar(string a) = a
uint32 intValue(uint32& a) = &a ? a : 10


// Sanity check
Point p: 10, 20
if p != foo(p): fail("p != foo(p)")
if "test" != bar("test"): fail("\"test\" != bar(\"test\")")

// Pass null as argument
if foo(null) != null: fail("foo(null) != null")
if bar(null) != null: fail("bar(null) != null")
if intValue(null) != 10: fail("intValue(null) != 10")

if result: "tc_null: OK"
