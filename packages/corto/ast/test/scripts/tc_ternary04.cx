// Test nested ternary operator with complex types
bool result: true

void fail(string msg):
    "tc_ternary04: FAIL: $msg"
    result = false

struct Point::
    x, y: uint32
    
bool a, b: true

var Point p = a ? b ? {10,20} : {30, 40} : {50,60}
if p.x != 10: fail("x != 10 (${p.x})")
if p.y != 20: fail("y != 20 (${p.y})")

p = a ? !b ? {10,20} : {30, 40} : {50,60}
if p.x != 30: fail("x != 30 (${p.x})")
if p.y != 40: fail("y != 40 (${p.y})")

p = !a ? b ? {10,20} : {30, 40} : {50,60}
if p.x != 50: fail("x != 50 (${p.x})")
if p.y != 60: fail("y != 60 (${p.y})")

p = !a ? {10,20} : b ? {30, 40} : {50,60}
if p.x != 30: fail("x != 30 (${p.x})")
if p.y != 40: fail("y != 40 (${p.y})")

p = !a ? {10,20} : !b ? {30, 40} : {50,60}
if p.x != 50: fail("x != 50 (${p.x})")
if p.y != 60: fail("y != 60 (${p.y})")

p = a ? {10,20} : b ? {30, 40} : {50,60}
if p.x != 10: fail("x != 10 (${p.x})")
if p.y != 20: fail("y != 20 (${p.y})")

if result: "tc_ternary04: OK"
