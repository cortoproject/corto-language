// tc_function
// Test calls to virtual machine functions with primitive and reference types return- & parameterTypes
bool result : true
bool called : false
void fail(string msg):
    "tc_function01: FAIL: $msg"
    result = false

// Function without arguments and returnType 
void func_01():
    called = true

func_01()
if !called: fail("func_01: function not called")

// One 8-bit argument
void func_02(bool a):
    called = true
    if !a: fail("func_02: argument of type bool not correctly passed")    

called = false
func_02(true)
if !called: fail("func_02: function not called")

// Two 8-bit arguments
void func_03(bool a, bool b):
    called = true
    if a: fail("func_03: argument a not correctly passed")
    if !b: fail("func_03: argument b not correctly passed")
            
called = false
func_03(false,true)
if !called: fail("func_03: function not called")
    
// Two 16-bit arguments
void func_04(uint16 a, uint16 b):
    called = true
    if a != 256: fail("func_04: argument a not correctly passed")
    if b != 65535: fail("func_04: argument b not correctly passed")
    
called = false
func_04(256,65535)
if !called: fail("func_04: function not called")

// Two 32-bit arguments
void func_05(uint32 a, int32 b):
    called = true
    if a != 65536: fail("func_05: argument a not correctly passed")
    if b != -1: fail("func_05: argument b not correctly passed")

called = false
func_05(65536,-1)
if !called: fail("func_05: function not called")

// Two 64-bit arguments
void func_06(uint64 a, float64 b):
    called = true
    if a != 5000000000: fail("func_06: argument a not correctly passed")
    if b > 5.5: fail("func_06: argument b not correctly passed")
        
called = false
func_06(5000000000,5.4)
if !called: fail("func_06: function not called")

// One argument of complex non-reference type
struct ComplexNonRef::
    member x,y,z : uint32

void func_07(ComplexNonRef a):
    called = true
    if a.x != 10: fail("func_07: argument a.x not correctly passed")
    if a.y != 20: fail("func_07: argument a.y not correctly passed")
    if a.z != 30: fail("func_07: argument a.z not correctly passed")
        
called = false
var ComplexNonRef complexNonRefArgument = {10,20,30}
func_07(complexNonRefArgument)
if !called: fail("func_07: function not called")

// One argument of complex reference type
class ComplexRef::
    member x,y,z : uint32

void func_08(ComplexRef a):
    called = true
    if a.x != 10: fail("func_08: argument a.x not correctly passed")
    if a.y != 20: fail("func_08: argument a.y not correctly passed")
    if a.z != 30: fail("func_08: argument a.z not correctly passed")
        
called = false
ComplexRef complexObject: 10,20,30
var ComplexRef complexRefArgument = complexObject
func_08(complexRefArgument)
if !called: fail("func_08: function not called")
    
// Two arguments of complex non-reference type
void func_09(ComplexNonRef a, ComplexNonRef b):
    called = true
    if a.x != 10: fail("func_09: argument a.x not correctly passed")
    if a.y != 20: fail("func_09: argument a.y not correctly passed")
    if a.z != 30: fail("func_09: argument a.z not correctly passed")
    if b.x != 40: fail("func_09: argument b.x not correctly passed")
    if b.y != 50: fail("func_09: argument b.y not correctly passed")
    if b.z != 60: fail("func_09: argument b.z not correctly passed")
        
called = false
var ComplexNonRef complexNonRefArgument2 = {40,50,60}
func_09(complexNonRefArgument,complexNonRefArgument2)
if !called: fail("func_09: function not called")

if result: "tc_function01: OK"
    
    
    
    
    