// Test delegates in collections
bool result: true
void fail(string msg):
    "tc_delegate03: FAIL: $msg"
    result = false

// The delegate type
int32 binaryOperation(int32 a, int32 b) delegate:

// Ordinary functions
int32 add(int32 a, int32 b) = a + b
int32 sub(int32 a, int32 b) = a - b
int32 mul(int32 a, int32 b) = a * b
int32 div(int32 a, int32 b) = a / b

// Four delegates
binaryOperation dAdd: add
binaryOperation dSub: sub
binaryOperation dDiv: div
binaryOperation dMul: mul

var int32 opsResult 
array{binaryOperation, 4} opsArray: add, sub, mul, div
sequence{binaryOperation} opsSeq: add, sub, mul, div
list{binaryOperation} opsList: add, sub, mul, div

// Call four operations on array
opsResult += opsArray[0,1,2,3](20, 10)
if opsResult != 242: fail("opsResult != 242")

// Call four operations on sequence
opsResult += opsSeq[0,1,2,3](20, 10)
if opsResult != 484: fail("opsResult != 484")

// Call four operations on list
opsResult += opsList[0,1,2,3](20, 10)
if opsResult != 726: fail("opsResult != 726")

if result: "tc_delegate03: OK"
