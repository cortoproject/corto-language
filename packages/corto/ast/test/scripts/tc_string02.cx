bool result : true
void fail(string msg):
    "tc_string02: FAIL: $msg"
    result = false

string stringObject, stringObject2: "Object"
var string stringvar, stringvar2 = "var"
string emptyString
var string emptyString2 = null

// String comparison
if stringObject != "Object":      fail("string-comparison between object and literal failed")    
if stringObject != stringObject2: fail("string comparison between objects failed")    
if stringvar != stringvar2:       fail("string comparison between vars failed")    
if stringvar != "var":               fail("string-comparison between var and literal failed")
if stringObject == stringvar:     fail("string-comparison between object and var failed")
if stringObject == emptyString:   fail("string comparison between object and empty string failed")
if emptyString != null:           fail("string comparison between empty strings failed")
if emptyString != emptyString2:   fail("string comparison between object and var empty string failed")
    
// String concatenation
var string concat
var uint32 i=5 
while i--:
    concat += "ab"
concat += stringObject
concat += stringvar
concat += emptyString
concat += null
if concat != "ababababObjectvar": fail("tc_string: string concatenation failed ($concat)")

// Embedded string expressions
enum Color::
    constant Red,Yellow,Blue
    
var int32 a = -5
var uint32 b = 10
var Color c = Yellow
var bool d = false
var char e = 'x'

if "$a" != "-5":      fail("incorrect result for embedded signed integer expression ($a)")
if "$b" != "10":      fail("incorrect result for embedded unsigned integer expression ($b)")
if "$c" != "Yellow":  fail("incorrect result for embedded enumeration expression ($c)")
if "${c-1}" != "Red": fail("incorrect result for embedded enumeration\\add expression")
if "$d" != "false":   fail("incorrect result for embedded boolean expression ($d)")
if "${!d}" != "true": fail("incorrect result for embedded boolean not expression(${!d})")
if "${a + b}" != "5": fail("incorrect result for embedded add expression")
if "$e" != "x":       fail("incorrect result for embedded character expression ($e)")
if "${e+1}" != "y":   fail("incorrect result for embedded character\\add expression(${e+1})")
if "$null" != "null": fail("incorrect result for null")

void printAdd(uint32 x, int32 y):
    if "$x + $y = ${x + y}" != "10 + -5 = 5": 
        fail("incorrect result for embedded add expression in function ($x + $y = ${x + y})")

printAdd(b,a)

void Embedded::
    uint32 x : 20
    int32 y : -5
    if "$x + $y = ${x + y}" != "20 + -5 = 15":
        fail("incorrect result for embedded add expression in scope ($x + $y = ${x + y})")

    if "$x + $y = ${x + y}" == "20 + -5 = 16":
        fail("incorrect result for embedded add expression in scope")

class Point::
    member x,y : uint32
    
class Foo::
    member x,y : object
    
Point p : 10,20
Foo f : p, f

if "$p" != "{10,20}":   fail("incorrect result for embedded object expression")
if "$f" != "{::p,::f}": fail("incorrect result for embedded object expression with reference members ($f)")
if f.x.toString() != "{10,20}": fail("incorrect result for reference member expression ${f.x.toString()}")
if f.y.toString() != "{::p,::f}": fail("incorrect result for reference member expression ${f.y.toString()}")

f.x = null
if "${f.x}" != "null": fail("incorrect result for reference member with null value")

if result: "tc_string02: OK"
