// Comparisons of struct and collection types
bool result : true
void fail(string msg):
    "tc_compare06: FAIL: $msg"
    result = false
    
struct Point::
    x,y : uint32
    
struct Line::
    points_1 : array{Point,2}
    points_2 : array{Point,2}
    
struct Polygon::
    points_1 : list{Point}
    points_2 : list{Point}

Line l1: points_1={{10,20}, {30,40}} points_2={{50,60},{70,80}}
Line l2: points_1={{10,20}, {30,40}} points_2={{50,60},{70,85}}

if l1.compare(l2) != LT: fail("l1.compare(l2) (${l1.compare(l2)} != LT)")
if l2.compare(l1) != GT: fail("l2.compare(l1) (${l2.compare(l1)} != GT)")
if l1.compare(l1) != EQ: fail("l1.compare(l1) (${l1.compare(l1)} != EQ)")

Polygon p1: points_1={{10,20}, {30,40}} points_2={{50,60},{70,80}}
Polygon p2: points_1={{10,20}, {30,40}} points_2={{50,60},{70,85}}
Polygon p3: points_1={{10,20}, {30,40}} points_2={{50,60},{70,80},{90,100}}

if p1.compare(p2) != LT: fail("p1.compare(p2) (${p1.compare(p2)} != LT)")
if p2.compare(p1) != GT: fail("p2.compare(p1) (${p2.compare(p1)} != GT)")
if p1.compare(p1) != EQ: fail("p1.compare(p1) (${p1.compare(p1)} != EQ)")
if p1.compare(p3) != LT: fail("p1.compare(p3) (${p1.compare(p3)} != LT)")
if p3.compare(p1) != GT: fail("p3.compare(p1) (${p3.compare(p1)} != GT)")
if p2.compare(p3) != LT: fail("p2.compare(p3) (${p2.compare(p3)} != LT)")
if p3.compare(p2) != GT: fail("p3.compare(p2) (${p3.compare(p2)} != GT)")
    
if result: "tc_compare06: OK"
    