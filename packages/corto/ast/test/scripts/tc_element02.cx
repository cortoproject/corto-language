// tc_element02
// This program tests the element operator for various variables with complex collection-types.
bool result : true
void fail(string msg):
    "tc_element02: FAIL: $msg"
    result = false

struct Point::
    member x,y : int32

array PointsArray : Point,3
sequence PointsSeq : Point,3
list PointsList : Point
map PointsMap : Point,string

// Validation of results
PointsArray ints_aCheck : {10,20},{30,40},{50,60}
PointsSeq ints_sCheck : {10,20},{30,40},{50,60}
PointsList ints_lCheck : {10,20},{30,40},{50,60}
PointsMap ints_mCheck : "a"={10,20} "b"={30,40} "c"={50,60}

void validate(PointsArray c, string failMsg): if c.compare(ints_aCheck): fail(failMsg)
void validate(PointsSeq c, string failMsg):   if c.compare(ints_sCheck): fail(failMsg)
void validate(PointsList c, string failMsg):  if c.compare(ints_lCheck): fail(failMsg)
void validate(PointsMap c, string failMsg):   if c.compare(ints_mCheck): fail(failMsg)

// Array object
PointsArray points_a : {1,2},{3,4},{5,6}
points_a[0].x = 10
points_a[0].y = 20
points_a[1].x *= 10
points_a[1].y *= 10
points_a[2].x += 45
points_a[2].y += 54
validate(points_a, "tc_element02 FAIL: Array object with static index")

// Sequence object
PointsSeq points_s : {1,2},{3,4},{5,6}
points_s[0].x = 10
points_s[0].y = 20
points_s[1].x *= 10
points_s[1].y *= 10
points_s[2].x += 45
points_s[2].y += 54
validate(points_s, "tc_element02 FAIL: Sequence object with static index")

// List object
PointsList ints_l : {1,2},{3,4},{5,6}
ints_l[0].x = 10
ints_l[0].y = 20
ints_l[1].x *= 10
ints_l[1].y *= 10
ints_l[2].x += 45
ints_l[2].y += 54
validate(ints_l, "tc_element02 FAIL: List object with static index")

// Map object
PointsMap ints_m : "a"={1,2} "b"={3,4} "c"={5,6}
ints_m["a"].x = 10
ints_m["a"].y = 20
ints_m["b"].x *= 10
ints_m["b"].y *= 10
ints_m["c"].x += 45
ints_m["c"].y += 54
// validate(ints_m, "tc_element02 FAIL: Map object with static index") Maps equal function not yet implemented

// Array var
var PointsArray points_la = {{1,2},{3,4},{5,6}}
points_la[0].x = 10
points_la[0].y = 20
points_la[1].x *= 10
points_la[1].y *= 10
points_la[2].x += 45
points_la[2].y += 54
validate(points_la, "tc_element02 FAIL: Array var with static index")

// Sequence var
var PointsSeq points_ls = {{1,2},{3,4},{5,6}}
points_ls[0].x = 10
points_ls[0].y = 20
points_ls[1].x *= 10
points_ls[1].y *= 10
points_ls[2].x += 45
points_ls[2].y += 54
validate(points_ls, "tc_element02 FAIL: Sequence var with static index")


uint32 i : 0

// Objects with variable indexes
// Array object with variable object index
PointsArray points_avo : {1,2},{3,4},{5,6}
while i<3:
    points_avo[i].x *= 10
    points_avo[i].y *= 10
    i++
validate(points_avo, "tc_element02 FAIL: Array object with dynamic object index")
    
// Sequence object with variable object index
PointsSeq points_svo : {1,2},{3,4},{5,6}
i=0
while i<3:
    points_svo[i].x *= 10
    points_svo[i].y *= 10
    i++
validate(points_svo, "tc_element02 FAIL: Sequence object with dynamic object index")


var uint32 j = 0

// Objects with variable indexes
// Array object with variable object index
PointsArray points_avl : {1,2},{3,4},{5,6}
while j<3:
    points_avl[j].x *= 10
    points_avl[j].y *= 10
    j++
validate(points_avl, "tc_element02 FAIL: Array object with dynamic var index")

// Sequence object with variable object index
PointsSeq points_svl : {1,2},{3,4},{5,6}
j=0
while j<3:
    points_svl[j].x *= 10
    points_svl[j].y *= 10
    j++
validate(points_svl, "tc_element02 FAIL: Sequence object with dynamic var index")


// vars with variable indexes
// Array var with variable object index
var PointsArray points_alvo = {{1,2},{3,4},{5,6}}
i=0
while i<3:
    points_alvo[i].x *= 10
    points_alvo[i].y *= 10
    i++
validate(points_alvo, "tc_element02 FAIL: Array var with dynamic object index")
    
// Sequence var with variable object index
var PointsSeq points_slvo = {{1,2},{3,4},{5,6}}
i=0
while i<3:
    points_slvo[i].x *= 10
    points_slvo[i].y *= 10
    i++
validate(points_slvo, "tc_element02 FAIL: Sequence object with dynamic object index")


// vars with variable indexes
// Array var with variable var index
var PointsArray points_alvl = {{1,2},{3,4},{5,6}}
j=0
while j<3:
    points_alvl[j].x *= 10
    points_alvl[j].y *= 10
    j++
validate(points_alvl, "tc_element02 FAIL: Array var with dynamic var index")

// Sequence var with variable var index
var PointsSeq points_slvl = {{1,2},{3,4},{5,6}}
j=0
while j<3:
    points_slvl[j].x *= 10
    points_slvl[j].y *= 10
    j++
validate(points_slvl, "tc_element02 FAIL: Sequence var with dynamic var index")

// Print OK if no testcase failed
if result: "tc_element02: OK"
    
