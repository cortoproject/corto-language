bool result: true
void fail(string msg):
    "tc_fold01: FAIL: $msg"
    result = false

// Test folding of literal expressions - use variable in evaluation so it happens at runtime
var bool boolResult
var uint32 r

r = 30
if (10 + 20) != r: fail("10 + 20 != r(30) (${10 + 20})")
if (10 + 20).typeof() != uint64: fail("(10 + 20).typeof() != uint64 (${(10 + 20).typeof().nameof()}")

boolResult = false
if (10 > 20) != boolResult: fail("(10 > 20) != boolResult (${10 > 20})")
if (10 > 20).typeof() != bool: fail("(10 > 20).typeof() != bool (${(10 > 20).typeof().nameof()})")

// Test folding of literal expressions and conditional statements (conditional statements are evaluated at compile time). 
if (10 + 20) != 30: fail("10 + 20 != r(30) (${10 + 20})")
if (10 > 20) != false: fail("(10 > 20) != false (${10 > 20})")
if (10 < 20) != true: fail("(10 < 20) != true (${10 < 20})")
if (10 > 20) == true: fail("(10 > 20) == true (${10 < 20})")
if (10 < 20) == false: fail("(10 < 20) == false (${10 < 20})")

if result: "tc_fold01: OK"
