bool result: true
void fail(string msg):
    "tc_basic02: FAIL: $msg"
    result = false

// Declare two variables
var uint32 a
var uint32 b

// Test whether values are initialized to zero
if a != 0: fail("a != 0 ($a)")
if b != 0: fail("b != 0 ($b)")

// Do calculations without assignments, validate that variables remain unchanged
a + 10
b + 20

if a != 0: fail("a != 0 ($a) #2")
if b != 0: fail("b != 0 ($b) #2")

// Do calculations without assignments, validate that operands are nonetheless evaluated
uint32 count : 0
int32 foo(uint32 x): 
    count+=x
    foo = x

foo(10) + foo(20)
if count != 30: fail("count != 30 ($count)")

// Do basic assignments
a = 10
b = 20
if a != 10: fail("a != 10 ($a)")
if b != 20: fail("b != 20 ($b)")

// Do basic calculations with assignments
a = 10 + 20
b = a + 30
if a != 30: fail("a != 30 ($a)")
if b != 60: fail("b != 60 ($b)")

// Test operator precedence of calculations
a = 10 + 20 * 2
if a != 50: fail("a != 50 ($a)")

a = 20 - 10 * 2
if a: fail("a != 0 ($a)")

a = 10 + 20 / 2
if a != 20: fail("a != 20 ($a)")

a = 10 - 20 / 2
if a: fail("a != 0 ($a) #2")

// Test brackets
a = (10 + 20) * 2
if a != 60: fail("a != 60 ($a)")

// Test bracket with a single expression
a = (15) * 3
if a != 45: fail("a != 45 ($a)")

if result: "tc_basic02: OK"
